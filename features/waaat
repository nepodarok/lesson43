Обычно один тест - одна проверка.
Но в случае с магазином один тест будет проверять несколько вещей, например что бы добраться до "подтвреждения заказа" нужно авторизирвоаться, выбрать магазин, выбрать блюдо, попасть в корзину и уже тогда можно протестировать подтверждение... т.е. мы полюбасу зацепим еще 4 проверку... и т.д.

dishes
  - на вход
  - на заказ блюда - готово
  - по посещение страницы заведения

confirm_order
  -  на подтверждение заказа - страница
  -  на подтверждение заказа(клик по кнопке) + уведомление пользователя о принятии заказа

devise
  - на успешный вход
  - на редактирование цены блюда из админки
  - на отображение новой цены из фронтенда

cart
    - на обновление корзины
    - на очищение корзины

Unsuccess_user
   - не успешную авторизацию и просмотр уведомления об этом

...этими 5тью тестами я проверил 10 случаев, 9 которых на фронтеде, и один на бэкенде
...я сосредоточился на написании тестов для фронтенда, поскольку это кастомный програминг, и не стал писать тесты на проверку бекенда(который по сути является хорошо протестированым гемом), потому что DRY - админка хорошо протестирована, а модель ведет себя как надо (что видно из теста devise). Иначе тесты на остальные модели будут однотипными, и отличаться только выбором модели и тестируемых аттрибутов. Если же вопрос тщательного тестирования гема админ актив - принципиальный, я могу копи-паст тест девайса. 
